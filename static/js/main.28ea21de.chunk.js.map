{"version":3,"sources":["components/card.js","components/button.js","App.js","pages/hosts.js","pages/day.js","pages/questions.js","reportWebVitals.js","index.js"],"names":["Card","props","children","rest","onClick","_objectWithoutProperties","React","createElement","Object","assign","className","defaultProps","Fragment","Button","text","pagemap","0","1","hosts","data","style","fontSize","map","item","idx","key","color","role","name","toUpperCase","2","day","display","flexDirection","alignItems","justifyContent","word","width","left","meaning","3","usedQuestions","updateUsedQuestions","questions","questionTimeInMinutes","hintShowInMinutes","_useState","useState","_useState2","_slicedToArray","selectedQuestion","setSelectedQuestion","_useState3","_useState4","started","setStarted","_useState5","_useState6","now","setNow","_useState7","_useState8","hintVisible","setHintVisible","_useState9","_useState10","clickable","setClickable","useEffect","tm","setTimeout","clearTimeout","height","border","padding","borderRadius","margin","flexWrap","overflowY","used","includes","id","backgroundColor","cursor","title","hints","Countdown","date","Number","renderer","_ref","minutes","seconds","zeroPad","onComplete","Date","position","bottom","thisDay","toISOString","split","replaceAll","App","page","setPage","Component","setUsedQuestions","questionsInLS","localStorage","getItem","q","JSON","parse","max","keys","length","newUsedQns","concat","_toConsumableArray","prev","setItem","stringify","right","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"qNAEe,SAASA,EAAKC,GAAO,IAC3BC,EAA4BD,EAA5BC,SAAoBC,GAAQF,EAAnBG,QAAeC,YAAIJ,EAAK,yBACxC,OACEK,IAAAC,cAAA,MAAAC,OAAAC,OAAA,CAAKC,UAAU,OAAON,QAASH,EAAMG,SAAaD,GAC/CD,GAKPF,EAAKW,aAAa,CAChBP,QAAQ,aACRF,SAAUI,IAAAC,cAAAD,IAAAM,SAAA,kBCXG,SAASC,EAAOZ,GAC7B,OACEK,IAAAC,cAAA,UAAQG,UAAU,QAAQN,QAASH,EAAMG,SAAUH,EAAMa,MAI7DD,EAAOF,aAAe,CAClBP,QAAQ,yBCDNW,EAAU,CACdC,EA2CF,SAAgBf,GACd,OACEK,IAAAC,cAAA,UAAQG,UAAU,cAChBJ,IAAAC,cAAA,UAAI,mCA7CRU,ECRa,SAAehB,GAAO,IACzBiB,EAAUjB,EAAMkB,KAAhBD,MACR,OACIZ,IAAAC,cAAA,WACID,IAAAC,cAAA,MAAIa,MAAO,CAAEC,SAAU,QAAS,gBAC/BH,EAAMI,IAAI,SAACC,EAAMC,GAAG,OACjBlB,IAAAC,cAAA,MAAIkB,IAAKD,GAAK,OAAIlB,IAAAC,cAAA,KAAGa,MAAO,CAAEM,MAAO,QAChCH,EAAKI,MACN,aAAUrB,IAAAC,cAAA,KAAGa,MAAO,CAAEM,MAAO,UACvBH,EAAKK,KAAMC,oBDAnCC,EETa,SAAa7B,GAAO,IACvB8B,EAAQ9B,EAAMkB,KAAdY,IACR,OACIzB,IAAAC,cAAA,OAAKa,MAAO,CAAEY,QAAS,OAAQC,cAAe,SAAUC,WAAY,SAAUC,eAAgB,WAC1F7B,IAAAC,cAAA,UAAK,mBACLD,IAAAC,cAAA,MAAIa,MAAO,CAAEC,SAAU,MAAOK,MAAM,UAAWK,EAAIK,MACnD9B,IAAAC,cAAA,MAAIa,MAAO,CAAEiB,MAAO,MAAOC,KAAM,QAAUP,EAAIQ,SAC/CjC,IAAAC,cAAA,WACAD,IAAAC,cAAA,aFEViC,EGNa,SAAmBvC,GAAO,IAC7BwC,EAA6CxC,EAA7CwC,cAAeC,EAA8BzC,EAA9ByC,oBAAqBvB,EAASlB,EAATkB,KACpCwB,EAAwDxB,EAAxDwB,UAAWC,EAA6CzB,EAA7CyB,sBAAuBC,EAAsB1B,EAAtB0B,kBAAiBC,EACXC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAvDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAAAI,EACdL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAAAG,EACJT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAA1BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAAAG,EACoBb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAAAG,EACAjB,oBAAS,GAAKkB,EAAAhB,YAAAe,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAW9B,OAVAG,oBAAU,WACN,IAAMC,EAAKf,EAAUgB,WAAW,WAC5BP,GAAe,IACI,GAApBlB,EAAyB,KAAQ,KAEpC,OAAO,WACCwB,GAAIE,aAAaF,KAE1B,CAACf,IAGAhD,IAAAC,cAAA,OAAKa,MAAO,CAAEY,QAAS,OAAQC,cAAe,SAAUI,MAAO,SAC3D/B,IAAAC,cAAA,MAAIa,MAAO,CAAEC,SAAU,QAAS,gBAGhCf,IAAAC,cAAA,OAAKa,MAAO,CAAEY,QAAS,OAAQwC,OAAQ,SACnClE,IAAAC,cAAA,OAAKa,MAAO,CAAEqD,OAAQ,kBAAmBC,QAAS,OAAQrC,MAAO,QAASsC,aAAc,gBAAiBC,OAAQ,MAAO5C,QAAS,OAAQ6C,SAAU,OAAQ1C,eAAgB,SAAS2C,UAAU,WACzLnC,EAAUrB,IAAI,SAAAC,GACX,IAAMwD,EAAOtC,EAAcuC,SAASzD,EAAK0D,IACzC,OAAO3E,IAAAC,cAACP,EAAI,CAACyB,IAAKF,EAAK0D,GAAI7D,MAAO,CAAE8D,gBAAiBH,EAAS7B,GAAoBA,EAAiB+B,KAAO1D,EAAK0D,GAAK,SAAW,OAAS,QAASvD,MAAO,QAASiD,aAAc,MAAOQ,OAAQjB,EAAY,UAAY,WAAa9D,QAAS,YACnO2E,GAAUb,IACXC,GAAa,GACbZ,GAAW,GACXQ,GAAe,GACfJ,EAAO,GACPR,EAAoB5B,GACpBmB,EAAoBnB,EAAK0D,OAE7B1D,EAAK0D,OAGjB3E,IAAAC,cAAA,OAAKa,MAAO,CAAEiB,MAAO,OAAQoC,OAAQ,kBAAmBE,aAAc,OAAQC,OAAQ,QAClFtE,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,YACE2C,GAAoB5C,IAAAC,cAAA,UAAI,kDAEvB2C,GACC5C,IAAAC,cAAAD,IAAAM,SAAA,KACIN,IAAAC,cAAA,MAAIa,MAAO,CAAEM,MAAO,QAASgD,QAAS,aAAexB,EAAiBkC,OACtE9E,IAAAC,cAAA,WACCuD,GAAexD,IAAAC,cAAAD,IAAAM,SAAA,KAAEN,IAAAC,cAAA,UAAI,mDAClBD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,MAAIa,MAAO,CAAEiB,MAAO,QAASuC,OAAQ,SAChC1B,EAAiBmC,MAAM/D,IAAI,SAACC,EAAMC,GAAG,OAAKlB,IAAAC,cAAA,MAAIkB,IAAKyB,EAAiB+B,GAAK,GAAKzD,GAAMlB,IAAAC,cAAA,UAAKgB,UAM9GjB,IAAAC,cAAA,OAAKa,MAAO,CAAEqD,OAAQ,kBAAmBE,aAAc,OAAQC,OAAQ,MAAOvC,MAAO,MAAOL,QAAS,OAAQG,eAAgB,SAAUF,cAAe,SAAUC,WAAY,WACxK5B,IAAAC,cAAA,UAAI,SACD2C,GAAoBI,EAAUhD,IAAAC,cAAC+E,IAAS,CAACC,KAAM7B,EAAM8B,OAA+B,GAAxB5C,EAA6B,KACxF6C,SAAU,SAAAC,GAA0B,IAAvBC,EAAOD,EAAPC,QAASC,EAAOF,EAAPE,QAElB,OAAOtF,IAAAC,cAAA,OAAKa,MAAO,CAAEsD,QAAS,YAAaQ,gBAAiB,QAASxD,MAAO,UACxEpB,IAAAC,cAAA,QAAMa,MAAO,CAAEC,SAAU,QAAUwE,YAAQF,GAAS,IAAEE,YAAQD,MAGtEE,WAAY,kBAAM3B,GAAa,MAE/B7D,IAAAC,cAAA,OAAKa,MAAO,CAAEsD,QAAS,YAAaQ,gBAAiB,QAASxD,MAAO,UACjEpB,IAAAC,cAAA,QAAMa,MAAO,CAAEC,SAAU,QAAS,UAE1Cf,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAACP,EAAI,CAACoB,MAAO,CAAEuD,aAAc,MAAOO,gBAAiB,MAAOV,OAAQ,OAAQnC,MAAO,OAAQ8C,OAAQ,WAAa/E,QAAS,WAC/G8C,IAAqBI,IACvBC,GAAW,GACXI,EAAOoC,KAAKrC,WAIpBpD,IAAAC,cAAA,OAAKa,MAAO,CAAE4E,SAAU,WAAYC,OAAQ,SAExC3F,IAAAC,cAACM,EAAM,CAACC,KAAK,OAAOV,QAAS,WACzB+D,GAAa,GACbhB,EAAoB,eH9E1C+C,GAAU,IAAIH,MAAOI,cAAcC,MAAM,KAAK,GAAGC,WAAW,IAAK,KAkCxDC,MAhCf,WAAe,IAAAxD,EAEWC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA5ByD,EAAIvD,EAAA,GAAEwD,EAAOxD,EAAA,GACdyD,EAAY1F,EAAQwF,GAAMnD,EACUL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/CX,EAAaY,EAAA,GAAEqD,EAAgBrD,EAAA,GAEtCe,oBAAU,WACR,IAAMuC,EAAgBC,aAAaC,QAAQX,GAC3C,GAAIS,EAAe,CACjB,IAAMG,EAAIC,KAAKC,MAAML,GACrBD,EAAiBI,KAElB,IAEH,IAMMG,EAAMzG,OAAO0G,KAAKnG,GAASoG,OAAO,EACxC,OACE7G,IAAAC,cAAA,OAAKG,UAAU,OACbJ,IAAAC,cAACkG,EAAS,CAACF,KAAMA,EAAMpF,KAAMA,EAAMuB,oBATX,SAAAuC,GAC1B,IAAMmC,EAAU,GAAAC,OAAAC,YAAO7E,GAAa,CAACwC,IACrCyB,EAAiB,SAAAa,GAAI,SAAAF,OAAAC,YAAQC,GAAI,CAAEtC,MACnC2B,aAAaY,QAAQtB,EAASa,KAAKU,UAAUL,KAMkC3E,cAAeA,IAC3F8D,IAASU,GAAgB,IAATV,GAAcjG,IAAAC,cAAA,OAAKa,MAAO,CAAE4E,SAAU,WAAY1D,KAAM,OAAQ2D,OAAQ,OAAQd,OAAQ,WAAa/E,QAAS,kBAAMoG,EAAQD,EAAO,EAAIA,EAAO,EAAI,KAAI,WAGtKA,IAASU,GAAO3G,IAAAC,cAAA,OAAKa,MAAO,CAAE4E,SAAU,WAAY0B,MAAO,OAAQzB,OAAQ,SAAU3F,IAAAC,cAACM,EAAM,CAACC,KAAK,OAAOV,QAAS,kBAAMoG,EAAQD,EAAOU,EAAMV,EAAO,EAAIA,SI5C/J,IAYeoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAtC,GAAiD,IAA9CwC,EAAMxC,EAANwC,OAAQC,EAAMzC,EAANyC,OAAQC,EAAM1C,EAAN0C,OAAQC,EAAM3C,EAAN2C,OAAQC,EAAO5C,EAAP4C,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACDrI,IAAAC,cAAC+F,EAAG,OAMRqB","file":"static/js/main.28ea21de.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Card(props) {\n  const {children,onClick,...rest} = props;\n  return (\n    <div className='card' onClick={props.onClick} {...rest}>\n      {children}\n    </div>\n  )\n}\n\nCard.defaultProps={\n  onClick:()=>{},\n  children: <></>\n}","import React from 'react'\n\nexport default function Button(props) {\n  return (\n    <button className='lfbtn' onClick={props.onClick}>{props.text}</button>\n  )\n}\n\nButton.defaultProps = {\n    onClick:()=>{}\n}","import React,{ useEffect, useState } from 'react';\nimport './App.css';\nimport Hosts from './pages/hosts';\nimport Day from './pages/day';\nimport Questions from './pages/questions';\nimport Button from './components/button';\nimport data from './data.json'\n\nconst pagemap = {\n  0: Header,\n  1: Hosts,\n  2: Day,\n  3: Questions\n}\n\nconst thisDay = new Date().toISOString().split('T')[0].replaceAll('-', '/');\n\nfunction App() {\n\n  const [page, setPage] = useState(0)\n  const Component = pagemap[page];\n  const [usedQuestions, setUsedQuestions] = useState([]);\n\n  useEffect(() => {\n    const questionsInLS = localStorage.getItem(thisDay);\n    if (questionsInLS) {\n      const q = JSON.parse(questionsInLS);\n      setUsedQuestions(q);\n    }\n  }, [])\n\n  const updateUsedQuestions = id => {\n    const newUsedQns = [...usedQuestions,id]\n    setUsedQuestions(prev => [...prev, id])\n    localStorage.setItem(thisDay, JSON.stringify(newUsedQns));\n  }\n\n  const max = Object.keys(pagemap).length-1;\n  return (\n    <div className=\"App\">\n      <Component page={page} data={data} updateUsedQuestions={updateUsedQuestions} usedQuestions={usedQuestions} />\n      {page !== max && page !== 0 && <div style={{ position: 'absolute', left: '10px', bottom: '10px', cursor: 'pointer' }} onClick={() => setPage(page > 0 ? page - 1 : 0)}>\n        Go back\n      </div>}\n      {page !== max && <div style={{ position: 'absolute', right: '10px', bottom: '10px' }}><Button text=\"Next\" onClick={() => setPage(page < max ? page + 1 : page)} /></div>}\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction Header(props) {\n  return (\n    <header className=\"App-header\">\n      <h1>\n        Leapfrog Devops Speakers Club\n      </h1>\n    </header>\n  )\n}\n","import React from 'react'\n\nexport default function Hosts(props) {\n    const { hosts } = props.data;\n    return (\n        <div>\n            <h1 style={{ fontSize: '3em' }}>Todays Hosts</h1>\n            {hosts.map((item, idx) =>\n                <h2 key={idx}>For <b style={{ color: 'red' }}>\n                    {item.role}\n                </b>, we have <b style={{ color: 'green' }}>\n                        {(item.name).toUpperCase()}\n                    </b>\n                </h2>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Day(props) {\n    const { day } = props.data;\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }} >\n            <h1 >Word of the Day</h1>\n            <h2 style={{ fontSize: '3em' ,color:'green'}}>{day.word}</h2>\n            <h3 style={{ width: '50%', left: '25%' }}>{day.meaning}</h3>\n            <br/>\n            <br/>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Card from '../components/card';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport Button from '../components/button';\n\n\nexport default function Questions(props) {\n    const { usedQuestions, updateUsedQuestions, data } = props;\n    const { questions, questionTimeInMinutes, hintShowInMinutes } = data;\n    const [selectedQuestion, setSelectedQuestion] = useState(null);\n    const [started, setStarted] = useState(false);\n    const [now, setNow] = useState(0)\n    const [hintVisible, setHintVisible] = useState(false);\n    const [clickable, setClickable] = useState(true)\n    useEffect(() => {\n        const tm = started ? setTimeout(function () {\n            setHintVisible(true)\n        }, hintShowInMinutes * 60 * 1000) : null\n\n        return () => {\n            if (tm) clearTimeout(tm)\n        }\n    }, [started])\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n            <h1 style={{ fontSize: '3em' }}>\n                Table Topics\n            </h1>\n            <div style={{ display: 'flex', height: '80vh' }}>\n                <div style={{ border: '1px solid green', padding: '20px', width: '200px', borderRadius: '20px 0 0 20px', margin: '5px', display: 'flex', flexWrap: 'wrap', justifyContent: 'center',overflowY:'scroll' }}>\n                    {questions.map(item => {\n                        const used = usedQuestions.includes(item.id);\n                        return <Card key={item.id} style={{ backgroundColor: used ? !!selectedQuestion && selectedQuestion.id === item.id ? 'purple' : 'grey' : 'green', color: 'white', borderRadius: '50%', cursor: clickable ? 'pointer' : 'no-drop' }} onClick={() => {\n                            if (!used && !!clickable) {\n                                setClickable(false)\n                                setStarted(false)\n                                setHintVisible(false)\n                                setNow(0)\n                                setSelectedQuestion(item)\n                                updateUsedQuestions(item.id)\n                            }\n                        }}>{item.id}</Card>\n                    })}\n                </div>\n                <div style={{ width: '100%', border: '1px solid green', borderRadius: '20px', margin: '5px' }}>\n                    <br />\n                    <br />\n                    <br />\n                    {!selectedQuestion && <h3>Please select a question from the left panel</h3>}\n\n                    {!!selectedQuestion &&\n                        <>\n                            <h1 style={{ color: 'green', padding: '5px 20px' }}>{selectedQuestion.title}</h1>\n                            <br />\n                            {hintVisible && <><h3>Here are some hints on what you can talk about.</h3>\n                                <br />\n                                <br />\n                                <ul style={{ width: '400px', margin: 'auto' }}>\n                                    {selectedQuestion.hints.map((item, idx) => <li key={selectedQuestion.id + '' + idx} ><h4>{item}</h4></li>)}\n                                </ul>\n                            </>}\n                        </>\n                    }\n                </div>\n                <div style={{ border: '1px solid green', borderRadius: '20px', margin: '5px', width: '30%', display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center' }}>\n                    <h1>TIMER</h1>\n                    {!!selectedQuestion && started ? <Countdown date={now + Number(questionTimeInMinutes * 60 * 1000)}\n                        renderer={({ minutes, seconds }) => {\n                            // Render a countdown\n                            return <div style={{ padding: '10px 20px', backgroundColor: 'black', color: 'white' }}>\n                                <span style={{ fontSize: '3em' }}>{zeroPad(minutes)}:{zeroPad(seconds)}</span>\n                            </div>\n                        }}\n                        onComplete={() => setClickable(true)}\n                    /> :\n                        <div style={{ padding: '10px 20px', backgroundColor: 'black', color: 'white' }}>\n                            <span style={{ fontSize: '3em' }}>00:00</span>\n                        </div>}\n                    <br />\n                    <br />\n                    <br />\n                    <Card style={{ borderRadius: '50%', backgroundColor: 'red', height: '50px', width: '50px', cursor: 'pointer' }} onClick={() => {\n                        if (!!selectedQuestion && !started) {\n                            setStarted(true);\n                            setNow(Date.now())\n                        }\n                    }} />\n\n                    <div style={{ position: 'absolute', bottom: '55px' }}>\n\n                        <Button text=\"Quit\" onClick={() => {\n                            setClickable(true);\n                            setSelectedQuestion(null)\n                        }}></Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}